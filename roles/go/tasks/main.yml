# Check
- name: check current golang version
  command: bash -c "/usr/local/go/bin/go version|sed -e 's/go version go//g'|cut -d' ' -f1"
  ignore_errors: yes
  register: go_version
  changed_when: false
- name: Current version
  debug: msg="go_version={{ go_version.stdout }}"
- name: Stop if already installed
  meta: end_play
  when: go_version is defined and go_version.stdout != "" and go_version.stdout is version_compare(go.version, '>=', strict=True)

# Install
- name: New version
  debug: msg="installing go version {{ go.version }}"
- name: Make tmp folder
  file:
    state: directory
    path: "/tmp/ansible/golang"
- name: Make user folders
  file:
    path: "{{ user_home_directory }}/{{ item }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: 0775
  with_items:
    - go
    - go/bin
- name: Remove old version
  file:
    state: absent
    path: /usr/local/go
- name: Download new version
  get_url:
    url: "https://storage.googleapis.com/golang/go{{ go.version }}.linux-amd64.tar.gz"
    dest: "/tmp/ansible/golang"
    mode: 0440
- name: Unpack new version
  unarchive:
    src: "/tmp/ansible/golang/go{{ go.version }}.linux-amd64.tar.gz"
    dest: /usr/local
    copy: no

# Cleanup
- name: Remove tmp folder
  file:
    state: absent
    path: "/tmp/ansible/golang"